<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菜菜园子</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-09-20T06:00:23.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>cailei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>08. Creating User Interfaces with Layouts and Widgets</title>
    <link href="http://yoursite.com/2016/09/20/08-Creating-User-Interfaces-with-Layouts-and-Widgets/"/>
    <id>http://yoursite.com/2016/09/20/08-Creating-User-Interfaces-with-Layouts-and-Widgets/</id>
    <published>2016-09-20T05:06:48.000Z</published>
    <updated>2016-09-20T06:00:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/AndroidProgramming/0801.png" alt=""></p>
<font color="Green"><br>CheckBox<br></font>

<h1 id="样式-style-amp-主题-theme"><a href="#样式-style-amp-主题-theme" class="headerlink" title="样式(style) &amp; 主题(theme)"></a>样式(style) &amp; 主题(theme)</h1><p>AndroidManifest.xml里设置Theme：</p>
<pre><code>android:theme=&quot;@style/AppTheme&quot;
</code></pre><p>values/styles.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;</div><div class="line">       &lt;!-- Customize your theme here. --&gt;</div><div class="line">       &lt;item name=&quot;colorPrimary&quot;&gt;@color/colorPrimary&lt;/item&gt;</div><div class="line">       &lt;item name=&quot;colorPrimaryDark&quot;&gt;@color/colorPrimaryDark&lt;/item&gt;</div><div class="line">       &lt;item name=&quot;colorAccent&quot;&gt;@color/colorAccent&lt;/item&gt;</div><div class="line">   &lt;/style&gt;</div></pre></td></tr></table></figure>
<font color="Green"><br>CheckBox.setOnCheckedChangeListener(…)<br><br>- <strong>dp</strong> : 像素无关<br>- <strong>sp</strong> : 用于字体<br><br>以 <code>layout_</code> 开头的属性，都是和父组件相关的属性，它们会告诉父布局如何在内部安排自己的子元素。其余的都是和自身相关的属性。<br><br>- <strong>padding</strong> : 内边距<br>- <strong>margin</strong> : 外边距（所以为layout_xxxxxMargin）<br></font>

<p>Create Landscape Variation 创建了 <code>/main/res/layout-land</code> 路径及在其中的布局xml文件</p>
<font color="Green"><br>android:layout_weight<br></font>

<h1 id="layout-width与layout-weight配合"><a href="#layout-width与layout-weight配合" class="headerlink" title="layout_width与layout_weight配合"></a>layout_width与layout_weight配合</h1><ul>
<li>第一步先满足width</li>
</ul>
<p><img src="/images/AndroidProgramming/0802a.png" alt=""></p>
<ul>
<li>然后按照weight的比例分配extra space</li>
</ul>
<p>1:1</p>
<p><img src="/images/AndroidProgramming/0802b.png" alt=""></p>
<p>2:1</p>
<p><img src="/images/AndroidProgramming/0802c.png" alt=""></p>
<ul>
<li>如果需要总空间等分，则应让两个控件都 <code>layout_width=0</code></li>
</ul>
<p><img src="/images/AndroidProgramming/0802d.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/AndroidProgramming/0801.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;font color=&quot;Green&quot;&gt;&lt;br&gt;CheckBox&lt;br&gt;&lt;/font&gt;

&lt;h1 id=&quot;样式-style-amp-主题-theme&quot;&gt;&lt;a
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>07. UI Fragments and the Fragment Manager</title>
    <link href="http://yoursite.com/2016/09/19/07-UI-Fragments-and-the-Fragment-Manager/"/>
    <id>http://yoursite.com/2016/09/19/07-UI-Fragments-and-the-Fragment-Manager/</id>
    <published>2016-09-19T03:28:44.000Z</published>
    <updated>2016-09-19T06:45:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>fragment的生命周期方法是由托管activity调用的，而activity的生命周期方法由操作系统调用。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><font color="Green">Fragment</font></td>
<td>android.support.v4.app.Fragment</td>
</tr>
<tr>
<td><font color="Green">FragmentActivity</font></td>
<td>android.support.v4.app.Fragment.Activity</td>
</tr>
</tbody>
</table>
<p>File -&gt; Project Structure -&gt; app -&gt; Dependencies -&gt; Library Dependency</p>
<p>com.google.android:support-v4:r7</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CrimeActivity extends FragmentActivity</div></pre></td></tr></table></figure>
<font color="Green"><br>EditText<br><br>android:hint<br></font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public View onCreateView(LayoutInflater inflater, ViewGroup container,</div><div class="line">                         Bundle savedInstanceState) &#123;</div><div class="line">    // Inflate the layout for this fragment</div><div class="line">    return inflater.inflate(R.layout.fragment_crime, container, false);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public View onCreateView(LayoutInflater inflater, ViewGroup container,</div><div class="line">                         Bundle savedInstanceState) &#123;</div><div class="line">    // Inflate the layout for this fragment</div><div class="line">    View v = inflater.inflate(R.layout.fragment_crime, container, false);</div><div class="line">    mCrimeTitleEditText = (EditText)v.findViewById(R.id.et_crime_title);</div><div class="line">    mCrimeTitleEditText.addTextChangedListener(new TextWatcher() &#123;</div><div class="line">        @Override</div><div class="line">        public void beforeTextChanged(CharSequence s, int start, int count, int after) &#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onTextChanged(CharSequence s, int start, int before, int count) &#123;</div><div class="line">            mCrime.setmTitle(s.toString());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void afterTextChanged(Editable s) &#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    return v;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注：</p>
<p>Fragment生命期方法均为public</p>
<font color="Green"><br>inflater.inflate(R.layout.fragment_crime, container, false);<br><br>addTextChangedListener()<br></font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">    super.onCreate(savedInstanceState);</div><div class="line">    setContentView(R.layout.activity_crime);</div><div class="line"></div><div class="line">    FragmentManager fm = getSupportFragmentManager();</div><div class="line">    Fragment f = fm.findFragmentById(R.id.fragment_container);</div><div class="line">    if (f == null) &#123;</div><div class="line">        f = new CrimeFragment();</div><div class="line">        fm.beginTransaction()</div><div class="line">                .add(R.id.fragment_container, f)</div><div class="line">                .commit();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注：</p>
<font color="Green"><br>getSupportFragmentManager()<br><br>findFragmentById(R.id.fragment_container)<br><br>fm.beginTransaction()<br>            .add(R.id.fragment_container, f)<br>            .commit();<br></font>

<font color="Blue"><br>Activity销毁时，FragmentManager会将fragment队列保存下来。在Activity重建时，新的FragmentManager会获得保存的队列，并重建fragment队列，从而恢复原来的状态。<br></font>

<font color="Green"><br>onAttach()<br><br>onCreate()<br><br>onCreateView()<br><br>onActivityCreated()<br><br>- onStart()<br><br>- onResume()<br><br>- onPause()<br><br>- onStop()<br><br>onDestroyView()<br><br>onDestroy()<br><br>onDetach()<br></font>

<table>
<thead>
<tr>
<th>内置版</th>
<th>Support版</th>
</tr>
</thead>
<tbody>
<tr>
<td>Activity</td>
<td>FragmentActivity</td>
</tr>
<tr>
<td>android.app.Fragment</td>
<td>android.suport.v4.app.Fragment</td>
</tr>
<tr>
<td>getFragmentManager()</td>
<td>getSupportFragmentManager()</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;fragment的生命周期方法是由托管activity调用的，而activity的生命周期方法由操作系统调用。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;fon
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>06. Android SDK Versions and Compatibility</title>
    <link href="http://yoursite.com/2016/09/18/06-Android-SDK-Versions-and-Compatibility/"/>
    <id>http://yoursite.com/2016/09/18/06-Android-SDK-Versions-and-Compatibility/</id>
    <published>2016-09-18T11:37:39.000Z</published>
    <updated>2016-09-18T12:24:53.000Z</updated>
    
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th>版本</th>
<th>代号</th>
<th>API Level</th>
</tr>
</thead>
<tbody>
<tr>
<td>4.1</td>
<td>Jelly Bean</td>
<td>16</td>
</tr>
<tr>
<td>4.2</td>
<td>Jelly Bean</td>
<td>17</td>
</tr>
<tr>
<td>4.3</td>
<td>Jelly Bean</td>
<td>18</td>
</tr>
<tr>
<td>4.4</td>
<td>KitKat</td>
<td>19</td>
</tr>
<tr>
<td>5.0</td>
<td>Lollipop</td>
<td>21</td>
</tr>
<tr>
<td>5.1</td>
<td>Lollipop</td>
<td>22</td>
</tr>
<tr>
<td>6.0</td>
<td>Marshmallow</td>
<td>23</td>
</tr>
<tr>
<td>7.0</td>
<td>Nougat</td>
<td>24</td>
</tr>
</tbody>
</table>
<font color="Green"><br>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {<br><br>}<br></font>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;版本&lt;/th&gt;
&lt;th&gt;代号&lt;/th&gt;
&lt;th&gt;API Level&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;Jelly Bean&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;/t
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>05. Your Second Activity</title>
    <link href="http://yoursite.com/2016/09/18/05-Your-Second-Activity/"/>
    <id>http://yoursite.com/2016/09/18/05-Your-Second-Activity/</id>
    <published>2016-09-18T06:55:17.000Z</published>
    <updated>2016-09-18T11:31:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>tools:text这个属性在preview中显示，运行时不会显示出来</p>
<font color="Green"><br><br>public Intent(Context packageContext, Class&lt;?&gt; cls)<br><br>public Intent putExtra(…)<br><br>public void startActivityForResult(Intent intent, int requestCode)<br><br>getIntent().getBooleanExtra(…);<br></font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = new Intent();</div><div class="line">   intent.putExtra(Extra_Cheated, true);</div><div class="line">   setResult(Activity.RESULT_OK, intent);</div></pre></td></tr></table></figure>
<font color="Green"><br>protected void onActivityResult(int requestCode, int resultCode, Intent data)<br></font>

<p>非常有趣的一点，在旋转后，CheatActivity被重新生成，然后其onCreate()函数中 <code>getIntent().getBooleanExtra(Extra_Answer, false);</code> 依然可以获得从QuizActivity传过来的参数。</p>
<font color="Blue"><br>在Activity中调用Activity.finish()方法同样可以将Activity从ActivityManager管理的栈中弹出。<br></font>

<p>注意key值多用 private static String，以及由此产生的生成Intent，取得Result Intent相应函数所处的Activity</p>
<p>#传入时：</p>
<p>在QuizActivity中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">private static int REQUEST_CHEAT_ACTIVITY = 0;</div><div class="line"></div><div class="line">Intent intent = CheatActivity.newIntent(QuizActivity.this, quizArray[mCurQuestionIndex].getmTrueFalseAnswer());</div><div class="line">startActivityForResult(intent, REQUEST_CHEAT_ACTIVITY);</div></pre></td></tr></table></figure>
<p>在CheatActivity中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">private static final String Extra_Answer = &quot;cheat_activity_extra_answer&quot;;</div><div class="line"></div><div class="line">public static Intent newIntent(Context context, boolean answer) &#123;</div><div class="line">    Intent intent = new Intent(context, CheatActivity.class);</div><div class="line">    intent.putExtra(Extra_Answer, answer);</div><div class="line">    return intent;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>#传出时：（返回值）<br>在QuizActivity中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">private static int REQUEST_CHEAT_ACTIVITY = 0;</div><div class="line"></div><div class="line">@Override</div><div class="line">protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123;</div><div class="line">    super.onActivityResult(requestCode, resultCode, data);</div><div class="line">    if (resultCode != Activity.RESULT_OK) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    if (requestCode == REQUEST_CHEAT_ACTIVITY) &#123;</div><div class="line">        if (data == null) &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        mCheated = CheatActivity.hasCheated(data);</div><div class="line">        cheatArray[mCurQuestionIndex] = mCheated;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里再次把获取boolean类型的intent extra的任务放到了 <code>CheatActivity.hasCheated(data)</code> 中，传入intent，返回boolean</p>
<p>在CheatActivity中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">private static final String Extra_Cheated = &quot;cheat_activity_extra_cheated&quot;;</div><div class="line"></div><div class="line">public static boolean hasCheated(Intent intent) &#123;</div><div class="line">    return intent.getBooleanExtra(Extra_Cheated, false);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">private static final String Extra_Cheated = &quot;cheat_activity_extra_cheated&quot;;</div><div class="line"></div><div class="line">&#123;</div><div class="line">        Intent intent = new Intent();</div><div class="line">        intent.putExtra(Extra_Cheated, true);</div><div class="line">        setResult(Activity.RESULT_OK, intent);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><font color="Red"><br>用Intent传来传去，需要用到putExtra，是key-value的</font></p>
<p>Activity在旋转时重新生成，需要Bundle的putXXXXX，也是key-value的</p>
<p>生成了好多key，取名字是个问题</p>
<ul>
<li>有没有更好的方法</li>
<li>key的命名应该遵循某种统一的规则<br></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;tools:text这个属性在preview中显示，运行时不会显示出来&lt;/p&gt;
&lt;font color=&quot;Green&quot;&gt;&lt;br&gt;&lt;br&gt;public Intent(Context packageContext, Class&amp;lt;?&amp;gt; cls)&lt;br&gt;&lt;br&gt;publ
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>04. Debugging Android Apps</title>
    <link href="http://yoursite.com/2016/09/18/04-Debugging-Android-Apps/"/>
    <id>http://yoursite.com/2016/09/18/04-Debugging-Android-Apps/</id>
    <published>2016-09-18T02:20:39.000Z</published>
    <updated>2016-09-18T03:59:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>Run -&gt; View Breakpoints</p>
<p>Android Lint : Analyze -&gt; Inspect Code</p>
<font color="Red"><br>怎么用好Lint？现在报的好多错误看不懂啊 ~<br></font>

<p>Tools -&gt; Android -&gt; Sync Project with Gradle</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Run -&amp;gt; View Breakpoints&lt;/p&gt;
&lt;p&gt;Android Lint : Analyze -&amp;gt; Inspect Code&lt;/p&gt;
&lt;font color=&quot;Red&quot;&gt;&lt;br&gt;怎么用好Lint？现在报的好多错误看不懂啊 ~&lt;br&gt;&lt;/font&gt;

    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>03. The Activity Lifecycle</title>
    <link href="http://yoursite.com/2016/09/16/03-The-Activity-Lifecycle/"/>
    <id>http://yoursite.com/2016/09/16/03-The-Activity-Lifecycle/</id>
    <published>2016-09-16T13:18:43.000Z</published>
    <updated>2016-09-18T02:14:03.000Z</updated>
    
    <content type="html"><![CDATA[<font color="Green"><br>onCreate()<br><br>onStart()<br><br>onResume()<br><em>*</em><br>onPause()<br><br>onStop()<br><br>onDestroy()<br></font>

<font color="Blue"><br>res -&gt; new Resource Directory -&gt; layout -&gt; orientation -&gt; Landscape<br></font>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">protected void onSaveInstanceState(Bundle outState)</div></pre></td></tr></table></figure>
<font color="Blue"><br>在Bundle中存储和恢复的数据类型只能是primitive type或实现了Serializable或Parcelable接口的对象<br></font>

]]></content>
    
    <summary type="html">
    
      &lt;font color=&quot;Green&quot;&gt;&lt;br&gt;onCreate()&lt;br&gt;&lt;br&gt;onStart()&lt;br&gt;&lt;br&gt;onResume()&lt;br&gt;&lt;em&gt;*&lt;/em&gt;&lt;br&gt;onPause()&lt;br&gt;&lt;br&gt;onStop()&lt;br&gt;&lt;br&gt;onDestroy()&lt;br&gt;&lt;/fon
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>02, Android and Model-View-Controller</title>
    <link href="http://yoursite.com/2016/09/14/02-Android-and-Model-View-Controller/"/>
    <id>http://yoursite.com/2016/09/14/02-Android-and-Model-View-Controller/</id>
    <published>2016-09-14T08:45:03.000Z</published>
    <updated>2016-09-15T12:35:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/AndroidProgramming/0201.png" alt=""></p>
<font color="Red">这里有个很蛋疼的问题，R.id.xxxxx，取回来都是一个整型的resId，怎么直接取到相应的String呢？</font>

<font color="Green"><br>TextView.setText()<br><br>Toast.makeText().show()<br></font>



<font color="Blue"><br>drawable-mdpi<br><br>drawable-hdpi<br><br>drawable-xhdpi<br><br>drawable-xxhdpi<br><br>都在 <code>src/main/res/</code> 下<br></font>



<font color="Green"><br>android:drawableRight=”@drawable/xxxxx”<br><br>android:drawablePadding<br><br>ImageButton<br><br>android:src<br></font>

<font color="Red"><br>Button的继承树，和ImageButton，居然相去甚远，为啥不统一起来？<br><br>Button -&gt; TextView -&gt; View<br><br>ImageButton -&gt; ImageView -&gt; View<br></font>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/AndroidProgramming/0201.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;font color=&quot;Red&quot;&gt;这里有个很蛋疼的问题，R.id.xxxxx，取回来都是一个整型的resId，怎么直接取到相应的String呢？&lt;/fon
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo技巧</title>
    <link href="http://yoursite.com/2016/09/14/Hexo%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2016/09/14/Hexo技巧/</id>
    <published>2016-09-14T07:58:41.000Z</published>
    <updated>2016-09-14T08:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>技巧不断补充… …</p>
<h1 id="首页仅仅显示摘要"><a href="#首页仅仅显示摘要" class="headerlink" title="首页仅仅显示摘要"></a>首页仅仅显示摘要</h1><p>在文章中加入<code>&lt;!-- more --&gt;</code>，上面的部分为摘要</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;技巧不断补充… …&lt;/p&gt;
&lt;h1 id=&quot;首页仅仅显示摘要&quot;&gt;&lt;a href=&quot;#首页仅仅显示摘要&quot; class=&quot;headerlink&quot; title=&quot;首页仅仅显示摘要&quot;&gt;&lt;/a&gt;首页仅仅显示摘要&lt;/h1&gt;&lt;p&gt;在文章中加入&lt;code&gt;&amp;lt;!-- more --&amp;g
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>01, Your First Android Application</title>
    <link href="http://yoursite.com/2016/09/14/01-Your-First-Android-Application/"/>
    <id>http://yoursite.com/2016/09/14/01-Your-First-Android-Application/</id>
    <published>2016-09-14T06:59:27.000Z</published>
    <updated>2016-09-14T07:57:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>需求截图:</p>
<a id="more"></a>
<p><img src="/images/AndroidProgramming/0101.png" alt=""></p>
<font color="Green">RelativeLayout<br><br>TextView</font>

<p><img src="/images/AndroidProgramming/0102.png" alt=""></p>
<font color="Green">LinearLayout<br><br>TextView<br><br>Button</font>

<p>一些在<code>&lt; &gt;</code>里的属性:</p>
<font color="Green">layout_width (可为<code>wrap_content</code>或<code>match_parent</code>)<br><br>layout_height<br><br>padding<br><br>gravity (<code>默认是左上角</code>)<br><br>orientation<br><br>text</font>

<p>stirngs.xml用于字符串常量，代码中用<code>@string/xxxxx</code>来引用</p>
<p>@+id/xxxxx用于给widget添加id</p>
<font color="Orange">command + o : filter并跳转到class</font>

<ul>
<li><font color="Red">如何自动插入xmlns:android=”<a href="http://schemas.android.com/apk/res/android" target="_blank" rel="external">http://schemas.android.com/apk/res/android</a>“</font></li>
<li><font color="Red">如何像xcode一样filter出不同的文件名，如*.xml文件</font></li>
<li><font color="Red">什么string放到strings.xml，什么不用放，规则，命名规范</font>

</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Activity</div><div class="line">protected void onCreate(Bundle savedInstanceState) &#123;&#125;</div><div class="line">findViewById();</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Toast.makeText();</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需求截图:&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>初级Android程序员 计划 &amp; 总纲</title>
    <link href="http://yoursite.com/2016/09/13/Android-Programming-%E8%AE%A1%E5%88%92-%E6%80%BB%E7%BA%B2/"/>
    <id>http://yoursite.com/2016/09/13/Android-Programming-计划-总纲/</id>
    <published>2016-09-13T08:49:09.000Z</published>
    <updated>2016-09-14T07:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><p>9月15日 - 10月31日</p>
<ol>
<li>每天一章 《Android Programming - The Big Nerd Ranch Guide, 2nd Edition》，包括手敲代码</li>
<li>在[1]完成后，花1周通览一遍《疯狂Android讲义，第三版》</li>
</ol>
<a id="more"></a>
<h1 id="规矩"><a href="#规矩" class="headerlink" title="规矩"></a>规矩</h1><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>抒情文字（其实就是絮叨）</td>
<td>用到markdown里的引用></td>
</tr>
<tr>
<td>正常行文</td>
<td>default字体颜色</td>
</tr>
<tr>
<td>需要记忆（背下来！）</td>
<td><font color="Green"> 绿色 </font></td>
</tr>
<tr>
<td>小技巧, Tip</td>
<td><font color="Orange"> 桔色 </font></td>
</tr>
<tr>
<td>可记可不记，至少混个眼熟</td>
<td><font color="Blue"> 蓝色 </font></td>
</tr>
<tr>
<td>疑问，留待以后解决</td>
<td><font color="Red"> 红色 </font></td>
</tr>
</tbody>
</table>
<h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>GeoQuiz</td>
<td>1, 2, 3, 5, 6</td>
</tr>
<tr>
<td>CriminalItent</td>
<td>7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 33</td>
</tr>
<tr>
<td>BeatBox</td>
<td>18, 19, 20, 21, 33</td>
</tr>
<tr>
<td>NerdLauncher</td>
<td>22</td>
</tr>
<tr>
<td>PhotoGallery</td>
<td>23, 24, 25, 26, 27, 28</td>
</tr>
<tr>
<td>DragAndDraw</td>
<td>29</td>
</tr>
<tr>
<td>Sunset</td>
<td>30</td>
</tr>
<tr>
<td>Locatr</td>
<td>31, 32</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>章节</th>
<th>重点</th>
</tr>
</thead>
<tbody>
<tr>
<td>1. Your First Android Application</td>
<td><a href="https://caileigtd.github.io/2016/09/14/01-Your-First-Android-Application/" target="_blank" rel="external">链接</a></td>
</tr>
<tr>
<td>2. Android and Model-View-Controller</td>
<td></td>
</tr>
<tr>
<td>3. The Activity Lifecycle</td>
<td></td>
</tr>
<tr>
<td>4. Debugging Android Apps</td>
<td></td>
</tr>
<tr>
<td>5. <strong><font color="Red">Your Second Activity</font></strong></td>
<td></td>
</tr>
<tr>
<td>6. Android SDK Versions and Compatibility</td>
<td></td>
</tr>
<tr>
<td>7. <strong><font color="Red">UI Fragments and the Fragment Manager</font></strong></td>
<td></td>
</tr>
<tr>
<td>8. Creating User Interfaces with Layouts and Widgets</td>
<td></td>
</tr>
<tr>
<td>9. <strong><font color="Red">Displaying Lists with RecyclerView</font></strong></td>
<td></td>
</tr>
<tr>
<td>10. <strong><font color="Red">Using Fragment Arguments</font></strong></td>
<td></td>
</tr>
<tr>
<td>11. <strong><font color="Red">Using ViewPager</font></strong></td>
<td></td>
</tr>
<tr>
<td>12. <strong><font color="Red">Dialogs</font></strong></td>
<td></td>
</tr>
<tr>
<td>13. <strong><font color="Red">The Toolbar</font></strong></td>
<td></td>
</tr>
<tr>
<td>14. SQLite Databases</td>
<td></td>
</tr>
<tr>
<td>15. <strong><font color="Red">Implicit Intents</font></strong></td>
<td></td>
</tr>
<tr>
<td>16. Taking Pictures with Intents</td>
<td></td>
</tr>
<tr>
<td>17. Two-Pane Master-Detail Interfaces</td>
<td></td>
</tr>
<tr>
<td>18. Assets</td>
<td></td>
</tr>
<tr>
<td>19. Audio Playback with SoundPool</td>
<td></td>
</tr>
<tr>
<td>20. Styles and Themes</td>
<td></td>
</tr>
<tr>
<td>21. <strong><font color="Red">XML Drawables</font></strong></td>
<td></td>
</tr>
<tr>
<td>22. <strong><font color="Red">More About Intents and Tasks</font></strong></td>
<td></td>
</tr>
<tr>
<td>23. HTTP &amp; Background Tasks</td>
<td></td>
</tr>
<tr>
<td>24. <strong><font color="Red">Loppers, Handlers, and HandlerThread</font></strong></td>
<td></td>
</tr>
<tr>
<td>25. Search</td>
<td></td>
</tr>
<tr>
<td>26. Background Services</td>
<td></td>
</tr>
<tr>
<td>27. <strong><font color="Red">Broadcast Intents</font></strong></td>
<td></td>
</tr>
<tr>
<td>28. Browsing the Web and WebView</td>
<td></td>
</tr>
<tr>
<td>29. <strong><font color="Red">Custom Views and Touch Events</font></strong></td>
<td></td>
</tr>
<tr>
<td>30. <strong><font color="Red">Property Animation</font></strong></td>
<td></td>
</tr>
<tr>
<td>31. Locations and Play Services</td>
<td></td>
</tr>
<tr>
<td>32. Maps</td>
<td></td>
</tr>
<tr>
<td>33. <strong><font color="Red">Material Design</font></strong></td>
<td></td>
</tr>
<tr>
<td>34. Afterword</td>
<td></td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h1&gt;&lt;p&gt;9月15日 - 10月31日&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每天一章 《Android Programming - The Big Nerd Ranch Guide, 2nd Edition》，包括手敲代码&lt;/li&gt;
&lt;li&gt;在[1]完成后，花1周通览一遍《疯狂Android讲义，第三版》&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>初尝Android之开篇</title>
    <link href="http://yoursite.com/2016/09/13/%E5%88%9D%E5%B0%9DAndroid%E4%B9%8B%E5%BC%80%E7%AF%87/"/>
    <id>http://yoursite.com/2016/09/13/初尝Android之开篇/</id>
    <published>2016-09-13T06:29:50.000Z</published>
    <updated>2016-09-14T07:56:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="个人背景"><a href="#个人背景" class="headerlink" title="个人背景"></a>个人背景</h1><ul>
<li>有近10年的工作经验，近4年的ios经验</li>
<li>曾经纯纯的coder，现在管理整个Mobile Team包括ios, android, test</li>
<li>ios算不上大牛，但在工作中基本也没有搞不定的feature，解不出的bug</li>
<li>现在每天能有个把个小时自由支配的时间（x, x &gt;= 1 &amp;&amp; x &lt;= 3）</li>
</ul>
<a id="more"></a>
<h1 id="学习原因"><a href="#学习原因" class="headerlink" title="学习原因"></a>学习原因</h1><ul>
<li>曾经带领的ios team现在做项目基本让人省心，ios框架、人员都稳定成熟</li>
<li>android团队，人员大部分新人，水平参差不齐，但全部为初、中级；目前android组内没有统一框架、规范，疑难杂症基本很难解决；暂时属于自由发挥，走哪儿算哪儿的状态</li>
</ul>
<blockquote>
<p>鉴于以上，决心在中秋之后，年底之前 （2016.09.15 - 2016.12.31）争取混成android组内的<code>一哥</code>，也不知道是不是过于狂妄自大了一些。</p>
</blockquote>
<h1 id="敌我分析"><a href="#敌我分析" class="headerlink" title="敌我分析"></a>敌我分析</h1><h2 id="我之优势"><a href="#我之优势" class="headerlink" title="我之优势"></a>我之优势</h2><ul>
<li>语言基础还不错，C++、Java语法层面应该问题不大</li>
<li>有4年ios经验</li>
<li>学习能力还不弱，至少不算笨吧，领悟力结合经验，虽然可能不如 <code>杨过</code> ，但怎么比 <code>郭靖</code> 强些的</li>
<li>持之以恒的毅力方面应该已经过历史验证</li>
<li><code>一哥</code>是玩笑了，其实我只需要能写feature，能帮android team解决疑难杂症就还好了，搬砖这种进度压力下的大强度重复劳动，我这里应该没有</li>
</ul>
<h2 id="我之劣势"><a href="#我之劣势" class="headerlink" title="我之劣势"></a>我之劣势</h2><ul>
<li>虽然有可支配的时间，但时间段并不整。工作时经常被领导、同事打断；回家后儿子不拿iphone砸坏我的rmbp我已经谢天谢地</li>
<li>比较懒，书上的例子有现成CD，上的code常常自以为懂了，所以不愿意自己再动手敲一遍。其实入门主要靠大量的、重复的练习</li>
<li>入门可能并不难，但留给我的时间挺少的，况且我的目标不是入门了就OK的，还要想法成 <code>一哥</code> 的</li>
</ul>
<h1 id="神之目标、计划"><a href="#神之目标、计划" class="headerlink" title="神之目标、计划"></a>神之目标、计划</h1><blockquote>
<p>好了，废话说了一箩筐，订下此次 <code>初尝Android</code> 的目标</p>
</blockquote>
<h2 id="1-选定一本入门书籍，一个月半月的时间学习完"><a href="#1-选定一本入门书籍，一个月半月的时间学习完" class="headerlink" title="1. 选定一本入门书籍，一个月半月的时间学习完"></a>1. 选定一本入门书籍，一个月半月的时间学习完</h2><p>不太差的书一本足以，以前考研时，地摊买了本￥8的考研数学，从头做到尾，加上最后突击做了几套试卷，居然也考出了全系数学第二的成绩（英语、政治永远的痛啊）。所以书不在多，关键是能坚持从头搞到尾。但毕竟磨刀不误砍柴工，还是花了一点时间挑了两本（之所以要两本，万一有本里有错误，多少有个参照）。</p>
<ul>
<li><strong>主</strong> <code>《Android Programming: The Big Nerd Ranch Guide, 2nd Edition》</code>, 这本从头到尾通读一下，以英文的为主，买了个盗版的中文，反正翻译就那么回事儿，床头撕吧撕吧，随翻随记随扔，也不心疼。总共34章，一天一章的话，一个月搞定。<code>每个例子都需要亲手敲一下，不能对照书，看完以后合上书敲</code></li>
<li><strong>辅</strong> <code>《疯狂Android讲义，第三版》</code>, 国人的原创，买了本正版，算是支持下，另外这个不是学习主力，可以留他个全尸 ^_^ 。在 <strong>主</strong> 的例子都弄完以后，这本花一周。</li>
</ul>
<h2 id="2-常用的框架熟悉，目前想到的包括："><a href="#2-常用的框架熟悉，目前想到的包括：" class="headerlink" title="2.  常用的框架熟悉，目前想到的包括："></a>2.  常用的框架熟悉，目前想到的包括：</h2><p>这些个库，目前都是听了个名儿，看别人的开源App，公司的Android App里面有用到。然后制定计划的时候时不时查到一些blog也经常提到，在android入门了以后需要看看，也为后面定规矩，统一team埋下伏笔。</p>
<p>原则上以现在的caib水平，任何一个库都是够用的了，跟读书一个道理，无论用哪个库，只要都搞得门儿清了，哪个都是好的不得了的。所以选择起来就简单了。</p>
<p>基于这个原则其实很容易拍脑袋，现在基本就能定下来：(本着不偏不倚，实际上每个公司的风格都了解下，多学总没啥坏处)</p>
<table>
<thead>
<tr>
<th>开源库</th>
<th>框架用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>Retrofit + OkHttp</td>
<td>源自<code>Square</code>的 网络框架</td>
</tr>
<tr>
<td>Gson</td>
<td>源自<code>Google</code>的 JSON序列化、反序列化 &lt;-&gt; POJO（Plain Ordinary Java Object）</td>
</tr>
<tr>
<td>Fresco</td>
<td>源自<code>Facebook</code>的 图片加载、缓存</td>
</tr>
<tr>
<td>Flux</td>
<td><code>？ 一套解耦的框架，但只是思想，需要自己理解并实现 ？</code></td>
</tr>
</tbody>
</table>
<h2 id="3-统一框架、统一coding-standard，为code-review打好基础"><a href="#3-统一框架、统一coding-standard，为code-review打好基础" class="headerlink" title="3.  统一框架、统一coding standard，为code review打好基础"></a>3.  统一框架、统一coding standard，为code review打好基础</h2><p>这个没啥好说的，folder结构，文件命名，Java Coding Standard</p>
<h2 id="4-通过不断和team一起分析、编码、review-code，由-初-升-中"><a href="#4-通过不断和team一起分析、编码、review-code，由-初-升-中" class="headerlink" title="4.  通过不断和team一起分析、编码、review code，由 初 升 中"></a>4.  通过不断和team一起分析、编码、review code，由 <code>初</code> 升 <code>中</code></h2><h2 id="5-通过理解现有代码，并结合经验refactor，以及修复疑难杂症的bug，由-中-升-高"><a href="#5-通过理解现有代码，并结合经验refactor，以及修复疑难杂症的bug，由-中-升-高" class="headerlink" title="5.  通过理解现有代码，并结合经验refactor，以及修复疑难杂症的bug，由 中 升 高"></a>5.  通过理解现有代码，并结合经验refactor，以及修复疑难杂症的bug，由 <code>中</code> 升 <code>高</code></h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;个人背景&quot;&gt;&lt;a href=&quot;#个人背景&quot; class=&quot;headerlink&quot; title=&quot;个人背景&quot;&gt;&lt;/a&gt;个人背景&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;有近10年的工作经验，近4年的ios经验&lt;/li&gt;
&lt;li&gt;曾经纯纯的coder，现在管理整个Mobile Team包括ios, android, test&lt;/li&gt;
&lt;li&gt;ios算不上大牛，但在工作中基本也没有搞不定的feature，解不出的bug&lt;/li&gt;
&lt;li&gt;现在每天能有个把个小时自由支配的时间（x, x &amp;gt;= 1 &amp;amp;&amp;amp; x &amp;lt;= 3）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="android" scheme="http://yoursite.com/categories/android/"/>
    
    
  </entry>
  
  <entry>
    <title>Blog搭建</title>
    <link href="http://yoursite.com/2016/09/12/%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/09/12/用Hexo搭建博客/</id>
    <published>2016-09-12T11:47:14.000Z</published>
    <updated>2016-09-14T07:56:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-next-github搭建Blog"><a href="#hexo-next-github搭建Blog" class="headerlink" title="hexo, next, github搭建Blog"></a>hexo, next, github搭建Blog</h1><ul>
<li>下载并安装<a href="https://nodejs.org/en/" target="_blank" rel="external">node.js</a></li>
<li>安装hexo</li>
</ul>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g hexo</div></pre></td></tr></table></figure>
<ul>
<li>生成博客路径</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir HexoBlog</div><div class="line">cd HexoBlog</div><div class="line">hexo init</div></pre></td></tr></table></figure>
<ul>
<li>安装插件</li>
</ul>
<table>
<thead>
<tr>
<th>插件</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>npm install hexo-deployer-git –save</td>
<td>向github发布blog</td>
</tr>
<tr>
<td>npm install hexo-generator-feed –save</td>
<td>添加rss</td>
</tr>
</tbody>
</table>
<h1 id="各种配置"><a href="#各种配置" class="headerlink" title="各种配置"></a>各种配置</h1><ul>
<li>_config.yml</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">title: 菜菜园子 </div><div class="line">author: cailei</div><div class="line">language: zh-Hans</div><div class="line"></div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:caileiGTD/caileiGTD.github.io.git</div><div class="line">  branch: master</div><div class="line"></div><div class="line">rss: /atom.xml</div></pre></td></tr></table></figure>
<ul>
<li><p>添加头像themes/next/source/images/avatar.jpg</p>
</li>
<li><p>themes/next/_config.yml</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">avatar: /images/avatar.jpg</div><div class="line"></div><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  categories: /categories</div><div class="line">  archives: /archives</div><div class="line">  </div><div class="line">scheme: Mist</div></pre></td></tr></table></figure>
<ul>
<li>默认post模板添加categories, scaffolds/post.md</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: &#123;&#123; title &#125;&#125;</div><div class="line">date: &#123;&#123; date &#125;&#125;</div><div class="line">categories:</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>hexo n “文章名”<br>hexo p (publish)<br>hexo g (generate)<br>hexo s (server)<br>hexo d (deploy)</p>
<h1 id="删除HelloWorld"><a href="#删除HelloWorld" class="headerlink" title="删除HelloWorld"></a>删除HelloWorld</h1><p>hexo安装好后有个HelloWorld的post，现在将其删除</p>
<ul>
<li>delete source/_post/HelloWorld.md</li>
<li>hexo clean</li>
<li>hexo generate</li>
</ul>
<h1 id="坑爹"><a href="#坑爹" class="headerlink" title="坑爹"></a>坑爹</h1><p>开始时点categories显示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cannot GET XXX</div></pre></td></tr></table></figure>
<p>然后查到了 <a href="http://darren90.github.io/2015/08/01/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/" target="_blank" rel="external">这篇文章</a> 其中对 <code>source/categories/index.md</code> 文件中的内容写的如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">layout: categories</div><div class="line">title: categories</div><div class="line">---</div></pre></td></tr></table></figure>
<p>照着修改后，解决了 <code>Cannot GET XXX</code> 的问题，但是categories点进去还是一片空白，于是又查到了 <a href="https://segmentfault.com/q/1010000002561642" target="_blank" rel="external">另一篇文章</a></p>
<p>实际上 <code>source/categories/index.md</code> 的内容应该如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">title: categories</div><div class="line">type: &quot;categories&quot;</div><div class="line">---</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><table>
<thead>
<tr>
<th>url</th>
<th>解决的问题</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://xiaodev.cn/2015/08/12/github-hexo搭建博客/" target="_blank" rel="external">http://xiaodev.cn/2015/08/12/github-hexo搭建博客/</a></td>
<td>mac osx下搭建</td>
</tr>
<tr>
<td><a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="external">https://segmentfault.com/a/1190000002632530</a></td>
<td>rss</td>
</tr>
<tr>
<td><a href="https://segmentfault.com/q/1010000002561642" target="_blank" rel="external">https://segmentfault.com/q/1010000002561642</a></td>
<td>categories, tags</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo-next-github搭建Blog&quot;&gt;&lt;a href=&quot;#hexo-next-github搭建Blog&quot; class=&quot;headerlink&quot; title=&quot;hexo, next, github搭建Blog&quot;&gt;&lt;/a&gt;hexo, next, github搭建Blog&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;下载并安装&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装hexo&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="杂项" scheme="http://yoursite.com/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
</feed>
